version: '3.8'
services:
  api:
    build:
      context: ./app/app
      dockerfile: Dockerfile
    container_name: flask-api
    restart: unless-stopped
    ports:
      - "5001:5000"
    volumes:
      - ./app/app:/app
      - ./data:/docker-entrypoint-initdb.d
    links:
      - db:db
    depends_on:
      - db
    networks: 
      - flask_network

  flask-keycloak-db:
    image: mysql:8.0
    container_name: flask-db
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: ${MYSQL_DB_API}
      MYSQL_USER: ${MYSQL_DB_API_USER}
      MYSQL_PASSWORD: ${MYSQL_DB_API_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      TZ: "Asia/Jakarta"
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
      - ./files:/files
    networks: 
      - flask_network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    hostname: pma
    links:
      - db:db
    ports:
      - 8000:80
    environment:
      MYSQL_USER: ${MYSQL_DB_API_USER}
      MYSQL_PASSWORD: ${MYSQL_DB_API_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_ROOT_PASSWORD}
    networks: 
      - flask_network

  apache:
      container_name: apache
      image: 'bitnami/apache:latest'
      ports:
        - '8778:80'
        - '443:8443'
      volumes:
        - /path/to/app:/app 
      links: 
        - db:db
        - phpmyadmin:phpmyadmin
      networks: 
        - flask_network

volumes:
  mysql_data:
    driver: local

networks: 
  flask_network:
    name: flask_network